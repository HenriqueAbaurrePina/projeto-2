version: "3.8"

services:
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usuarios_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./bd/init.sql:/docker-entrypoint-initdb.d/init.sql
      - backup-volume:/backup
    networks:
      - app-net

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      - mysql
    ports:
      - "8081:80"
    networks:
      - app-net

  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - app-net

  backup-trigger:
    build: ./backup-trigger
    container_name: backup-trigger
    depends_on:
      - mysql
    volumes:
      - ./backup-trigger/mysql-backup-job.yml:/app/mysql-backup-job.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - backup-volume:/backup
    ports:
      - "8082:80"
    networks:
      - app-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - app-net

volumes:
  mysql-data:
  backup-volume:
  elasticsearch-data:
  kibana-data:

networks:
  app-net:
