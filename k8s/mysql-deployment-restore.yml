apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: restore-db
          image: mysql:5.7
          command:
            - sh
            - -c
            - |
              echo "[Init] Verificando se o banco já foi restaurado..."
              if [ -d "/var/lib/mysql/mysql" ]; then
                echo "[Init] Banco de dados já está inicializado."
              else
                echo "[Init] Aguardando o MySQL iniciar..."
                for i in $(seq 1 60); do
                  mysqladmin ping -h 127.0.0.1 -proot --silent && break
                  echo "[Tentativa $i] Aguardando MySQL subir..."
                  sleep 2
                done
                if [ -f /backup/usuarios_dump.sql ]; then
                  echo "[Init] Restaurando dump..."
                  mysql -h 127.0.0.1 -u root -proot < /backup/usuarios_dump.sql
                else
                  echo "[Init] Nenhum dump encontrado em /backup."
                fi
              fi
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: backup-volume
              mountPath: /backup
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: backup-volume
              mountPath: /backup
      volumes:
        - name: mysql-data
          emptyDir: {}
        - name: backup-volume
          persistentVolumeClaim:
            claimName: mysql-backup-pvc
